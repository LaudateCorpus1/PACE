/*
 * Copyright 2016 MIT Lincoln Laboratory
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package edu.mit.ll.pace;

import java.util.Map;
import java.util.TreeMap;

/**
 * Enumeration for the fields in an entry.
 */
public enum EntryField {
  ROW("row"),
  COLUMN_FAMILY("colFamily"),
  COLUMN_QUALIFIER("colQualifier"),
  COLUMN_VISIBILITY("colVisibility"),
  TIMESTAMP("timestamp"),
  DELETE("delete"),
  VALUE("value");

  /**
   * Set of EntryField names mapped to the EntryField enum object. Used to speed up name lookups.
   */
  private static final Map<String,EntryField> fields;
  static {
    fields = new TreeMap<>(String.CASE_INSENSITIVE_ORDER);
    for (EntryField field : values()) {
      fields.put(field.name, field);
    }
  }

  /**
   * A string representation of the EntryField.
   */
  private final String name;

  /**
   * Create an EntryField with the given name.
   *
   * @param name
   *          Name of the entry field. Used in the configuration INI.
   */
  EntryField(String name) {
    this.name = name;
  }

  @Override
  public String toString() {
    return this.name;
  }

  /**
   * Get the entry from its {@link String} representation.
   * <p>
   * This method is paired with {@link #toString()}, and will parse strings generated by that method.
   *
   * @param value
   *          Value to parse.
   * @return EntryField for the value.
   */
  public static EntryField fromString(String value) {
    EntryField field = fields.get(value);
    if (field == null) {
      throw new IllegalArgumentException("invalid name");
    }
    return field;
  }

}
